plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'maven'
	id 'jacoco'
}

group='com.github.aesteve'
version='0.1-SNAPSHOT'

def vertxVersion = '3.1.0'

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	// vertx
	compile "io.vertx:vertx-core:${vertxVersion}"
	compile "io.vertx:vertx-web:${vertxVersion}"
    compile "io.vertx:vertx-auth-common:${vertxVersion}"
    compile "io.vertx:vertx-auth-shiro:${vertxVersion}"
	compile "io.vertx:vertx-auth-jwt:${vertxVersion}"
    compile "io.vertx:vertx-auth-jdbc:${vertxVersion}"
    compile "io.vertx:vertx-jdbc-client:${vertxVersion}"

	compile "io.vertx:vertx-service-proxy:${vertxVersion}"
	compile "io.vertx:vertx-codegen:${vertxVersion}"
	
	// template engines
	compile "io.vertx:vertx-web-templ-handlebars:${vertxVersion}"
	compile "io.vertx:vertx-web-templ-mvel:${vertxVersion}"
	compile "io.vertx:vertx-web-templ-jade:${vertxVersion}"
	compile "io.vertx:vertx-web-templ-thymeleaf:${vertxVersion}"

	// reflection
	compile 'org.reflections:reflections:0.9.9'
	compile 'commons-beanutils:commons-beanutils:1.9.2'
	
	// JSON api
	compile 'io.fastjson:boon:0.32'
	
	// tests
    testCompile 'com.github.jknack:handlebars:1.3.0'
	testCompile "io.vertx:vertx-unit:${vertxVersion}"
	testCompile 'junit:junit:4.12'
}

compileTestJava {
	options.compilerArgs << '-parameters'
}

/* Service Proxy related */
def generatedSrcPath="$buildDir/generated-src"
def generatedSrcDir = file(generatedSrcPath)

sourceSets {
	test {
		java.srcDirs += generatedSrcDir
		output.dir(builtBy: 'generateServiceProxy', generatedSrcPath)
	}
}

task generateServiceProxy(type: JavaCompile, description: 'Generates EBServiceProxies') {
	source = [sourceSets.test.java, sourceSets.main.java]
	classpath = configurations.testCompile
	destinationDir = generatedSrcDir
	options.compilerArgs = [
		"-proc:only",
		"-processor", "io.vertx.codegen.CodeGenProcessor",
		"-AoutputDirectory=$generatedSrcPath"
	]
}


compileTestJava.dependsOn generateServiceProxy

clean {
	delete += generatedSrcDir
}




test.outputs.upToDateWhen { false }

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
